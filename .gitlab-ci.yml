###
# Gitlab CI
#
# @author Mike Street
# @date 01-2021
#
# Utilises the custom Liquid Light linter
# https://gitlab.lldev.co.uk/devops/lint
#
###

# Stages which are run
stages:
  - backend
  - build

# Use custom LL docker image
image: registry.gitlab.lldev.co.uk/devops/containers/buster-node-ci

# Lint the PHP
php:stan:
  stage: backend
  script:
    - composer install --no-ansi --no-dev --no-interaction --no-scripts --no-progress --optimize-autoloader
    - lint php:stan --level=8

php:coding-standards:
  stage: backend
  script:
    - lint php:coding-standards

composer:normalize:
  stage: backend
  script:
    - lint composer:normalize

.image:build:
  stage: build
  image: docker:20.10.24
  variables:
    COMPOSER_VERSION: "2"
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_BUILDKIT: 1
  services:
    - docker:20.10.24-dind
  before_script:
    # Login to our registry
    - echo "$DOCKER_REGISTRY_PASS" | docker login $DOCKER_REGISTRY --username $DOCKER_REGISTRY_USER --password-stdin
  script:
    - >
      docker build
      --tag $CI_REGISTRY_IMAGE/${TITLE}:dev-main
      --build-arg APP_PATH="${APP_PATH}"
      -f ./Dockerfiles/${DOCKER_IMAGE}
      .
    - docker push $CI_REGISTRY_IMAGE/${TITLE}:dev-main
  only:
    - main

.npm:image:build:
  extends:
    - .image:build
  variables:
    DOCKER_IMAGE: "NPM.dockerfile"

.composer:image:build:
  extends:
    - .image:build
  variables:
    DOCKER_IMAGE: "Composer.dockerfile"

js-eslint:image:build:
  extends:
    - .npm:image:build
  variables:
    TITLE: "js-eslint"
    APP_PATH: "/app/eslint"

editorconfig:image:build:
  extends:
    - .composer:image:build
  variables:
    TITLE: "editorconfig"
    APP_PATH: "/app/editorconfig"

php-coding-standards:image:build:
  extends:
    - .composer:image:build
  variables:
    TITLE: "php-coding-standards"
    APP_PATH: "/app/php-coding-standards"
