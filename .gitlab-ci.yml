###
# Gitlab CI
#
# @author Mike Street
# @date 01-2021
#
# Utilises the custom Liquid Light linter
# https://gitlab.lldev.co.uk/devops/lint
#
###

include:
  - local: 'app/composer-normalize/.gitlab/.gitlab-ci.yml'
  - local: 'app/editorconfig/.gitlab/.gitlab-ci.yml'
  - local: 'app/eslint/.gitlab/.gitlab-ci.yml'
  - local: 'app/json-lint/.gitlab/.gitlab-ci.yml'
  - local: 'app/php-coding-standards/.gitlab/.gitlab-ci.yml'
  - local: 'app/phpstan/.gitlab/.gitlab-ci.yml'
  - local: 'app/rector/.gitlab/.gitlab-ci.yml'
  - local: 'app/stylelint/.gitlab/.gitlab-ci.yml'
  - local: 'app/typoscript-lint/.gitlab/.gitlab-ci.yml'
  - local: 'app/yaml-lint/.gitlab/.gitlab-ci.yml'

# Stages which are run
stages:
  - build
  - test
  - build-slim
  - test-slim

variables:
  ADDITIONAL_COMMANDS: ""

cache:
  - key:
      files:
        - composer.lock
    paths:
      - vendor/
      - app/**/vendor/
  - key:
      files:
        - package-lock.json
    paths:
      - node_modules/
      - app/**/node_modules/

###
# Base Image Build
###
.base:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/${TITLE}:$CI_COMMIT_BRANCH
    SLIM_IMAGE_NAME: $IMAGE_NAME-slim

.docker:
  extends:
    - .base
  before_script:
    # Login to our registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin

.image:build:
  extends:
    - .docker
  stage: build
  image: registry.gitlab.lldev.co.uk/devops/containers/deployment/docker:php8.2
  script:
    - cd ${APP_PATH}
    - composer install --no-dev --no-interaction --no-scripts --no-progress --optimize-autoloader --ansi  --ignore-platform-reqs
    - $ADDITIONAL_COMMANDS
    - ./lint run --verbose
    - >
      docker build
      --tag $IMAGE_NAME
      -f ./../../Dockerfiles/Linter.dockerfile
      .
    - docker push $IMAGE_NAME
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual

.image:test:
  extends:
    - .base
  stage: test
  image: $IMAGE_NAME
  script:
    - /lint/lint run

.slim:image:build:
  extends:
    - .docker
  stage: build-slim
  image: ghcr.io/liquidlight/docker-slim:1.37.3
  before_script:
    # Login to our registry
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY --username $CI_REGISTRY_USER --password-stdin
  script:
    # Ensure that the fat image is cached locally
    - docker pull $IMAGE_NAME
    # Note regarding parameters: "--target" is the input, "--tag" is the output
    - >
      docker-slim build
      --target="$IMAGE_NAME"
      --include-path="/lint"
      --http-probe="false"
      --continue-after="1"
      --tag="$SLIM_IMAGE_NAME"
    - docker push $SLIM_IMAGE_NAME
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

.slim:image:test:
  extends:
    - .image:test
  stage: test-slim
  image: $SLIM_IMAGE_NAME
